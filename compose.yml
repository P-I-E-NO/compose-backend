version: '3.9'

networks:
  pieno-net:
    name: pieno-net
  
volumes:
  predictions_db_data:

services:
  api_gateway:
    image: nginxinc/nginx-unprivileged
    networks:
      - pieno-net
    ports:
      - "14000:14000"
    volumes:
      - ./hosts.conf:/etc/nginx/conf.d/hosts.conf
    depends_on: # needed because otherwise nginx won't resolve the containers
      - users
      - cars
      - fuel_meter
      - swagger_ui
      - predictions_api

  swagger_ui:
    image: swaggerapi/swagger-ui
    networks:
      - pieno-net

  ## AI STUFF
  
  my_sql: 
    image: "mysql:8.3.0"
    environment:
      - MYSQL_USER=fre
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=pieno
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    volumes:
      - predictions_db_data:/var/lib/mysql
    networks:
      - pieno-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  predictions_api:
    image: emilianomaccaferri/pieno-predict-api:latest
    networks:
      - pieno-net
    environment:
      - MYSQL_USER=fre
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=pieno
    depends_on:
      my_sql:
        condition: service_healthy
  
  ## END AI STUFF

  users_db:
    image: postgres:16.1
    networks:
      - pieno-net
    environment:
      - POSTGRES_USER=dockerissimo_rust
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=fantastic_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d fantastic_db -U dockerissimo_rust"]
      interval: 10s
      timeout: 5s
      retries: 5

  cars_db:
    image: postgres:16.1
    networks:
      - pieno-net
    environment:
      - POSTGRES_USER=dockerissimo_rust
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=fantastic_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d fantastic_db -U dockerissimo_rust"]
      interval: 10s
      timeout: 5s
      retries: 5

  users:
    container_name: users-app
    image: emilianomaccaferri/pieno-users:latest
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - pieno-net
    environment:
      - CONN_URI=postgresql://dockerissimo_rust:pass@users_db:5432/fantastic_db
      - RUST_LOG=trace
      - JWT_SECRET=Poggaceo

  messenger:
    depends_on:
      users_db:
        condition: service_healthy
    image: emilianomaccaferri/pieno-messenger:v1.0.0-save-notifications
    environment:
      - DB_CONNECTION_STRING=postgresql://dockerissimo_rust:pass@users_db:5432/fantastic_db
      - SERVICE_ACCOUNT_PATH=/code/firebase/pieno-app-firebase-adminsdk-v437b-0e77967c6f.json
      - JWT_KEY=Poggaceo
    networks:
      - pieno-net
    volumes:
      - ./firebase:/code/firebase

  cars:
    container_name: cars-app
    image: emilianomaccaferri/pieno-cars:latest
    depends_on:
      cars_db:
        condition: service_healthy
    networks:
      - pieno-net
    environment:
      - CONN_URI=postgresql://dockerissimo_rust:pass@cars_db:5432/fantastic_db
      - RUST_LOG=trace
      - JWT_SECRET=Poggaceo

  queue:
    image: redis:7.2.3
    networks:
      - pieno-net

  fuel_notifier: 
    image: emilianomaccaferri/pieno-fuel-notifier:v1.0.0-first-release
    #deploy:
    #  replicas: 3
    #  mode: dnsrr
    environment:
      - NOTIFICATION_GROUP=notification_listeners
      - BLOCK_TIME=60000 # how much should the consumer block for? 
      - STREAM_NAME=streams:notifications
      - REDIS_URL=redis://queue
      - ITEM_COUNT=10
      - MESSENGER_URI=http://messenger:5050
      - DEAD_KEY_EXPIRY=100000 # how much time should pass before autoclaiming messages?
    networks:
      - pieno-net
    depends_on:
      - queue
      - messenger

  fuel_meter:
    image: emilianomaccaferri/pieno-fuel-meter
    #deploy:
    #  replicas: 3
    #  mode: dnsrr
    environment:
      - HTTP_PORT=3000
      - APP_NAME=fuel-meter-api
      - REDIS_URL=redis://queue
      - JWT_KEY=Poggaceo
      - RUST_BACKTRACE=1
      - RUST_LOG=trace
      - REDIS_STREAM=streams:notifications
    networks:
      - pieno-net
    depends_on:
      - queue
